{
"version":3,
"file":"module$node_modules$merge$lib$src$index.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/merge/lib/src/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$merge$lib$src$index\"] = function(global,require,module,exports) {\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isPlainObject = exports.clone = exports.recursive = exports.merge = exports.main = void 0;\r\nmodule.exports = exports = main;\r\nexports.default = main;\r\nfunction main() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return merge.apply(void 0, items);\r\n}\r\nexports.main = main;\r\nmain.clone = clone;\r\nmain.isPlainObject = isPlainObject;\r\nmain.recursive = recursive;\r\nfunction merge() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return _merge(items[0] === true, false, items);\r\n}\r\nexports.merge = merge;\r\nfunction recursive() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    return _merge(items[0] === true, true, items);\r\n}\r\nexports.recursive = recursive;\r\nfunction clone(input) {\r\n    if (Array.isArray(input)) {\r\n        var output = [];\r\n        for (var index = 0; index < input.length; ++index)\r\n            output.push(clone(input[index]));\r\n        return output;\r\n    }\r\n    else if (isPlainObject(input)) {\r\n        var output = {};\r\n        for (var index in input)\r\n            output[index] = clone(input[index]);\r\n        return output;\r\n    }\r\n    else {\r\n        return input;\r\n    }\r\n}\r\nexports.clone = clone;\r\nfunction isPlainObject(input) {\r\n    return input && typeof input === 'object' && !Array.isArray(input);\r\n}\r\nexports.isPlainObject = isPlainObject;\r\nfunction _recursiveMerge(base, extend) {\r\n    if (!isPlainObject(base))\r\n        return extend;\r\n    for (var key in extend) {\r\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype')\r\n            continue;\r\n        base[key] = (isPlainObject(base[key]) && isPlainObject(extend[key])) ?\r\n            _recursiveMerge(base[key], extend[key]) :\r\n            extend[key];\r\n    }\r\n    return base;\r\n}\r\nfunction _merge(isClone, isRecursive, items) {\r\n    var result;\r\n    if (isClone || !isPlainObject(result = items.shift()))\r\n        result = {};\r\n    for (var index = 0; index < items.length; ++index) {\r\n        var item = items[index];\r\n        if (!isPlainObject(item))\r\n            continue;\r\n        for (var key in item) {\r\n            if (key === '__proto__' || key === 'constructor' || key === 'prototype')\r\n                continue;\r\n            var value = isClone ? clone(item[key]) : item[key];\r\n            result[key] = isRecursive ? _recursiveMerge(result[key], value) : value;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","main","items","_i","arguments","length","merge","apply","_merge","recursive","clone","input","Array","isArray","output","index","push","isPlainObject","_recursiveMerge","base","extend","key","isClone","isRecursive","result","shift","item","value","Object","defineProperty","default"]
}
